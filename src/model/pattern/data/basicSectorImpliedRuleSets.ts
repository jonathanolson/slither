import { PatternBoardRuleSet } from '../PatternBoardRuleSet.ts';

export const basicSectorImpliedRuleSets = [
  // PatternBoardRuleSet.deserialize( JSON.parse( '' ) ),
  PatternBoardRuleSet.deserialize( JSON.parse( '{"patternBoard":"[0,1,\\"exit-vertex\\",2,[]]","mapping":"[[[0,0]],[[0,[1,0]],[0,[-1,1.2246467991473532e-16]],[0,[1,-2.4492935982947064e-16]]],[],[[[0,0],[1,0],[0.5,0.3]],[[0,0],[0.5,-0.3],[1,0]],[[0,0],[-0.5,0.3],[-1,0]],[[0,0],[-1,0],[-0.5,-0.3]]]]","rules":[{"input":{"blackEdges":[0,1]},"output":{"blackEdges":[0,1],"redEdges":[2]}},{"input":{"blackEdges":[0],"redEdges":[2]},"output":{"blackEdges":[0,1],"redEdges":[2]}},{"input":{"redEdges":[0,2]},"output":{"redEdges":[0,1,2]}}]}' ) ),
  PatternBoardRuleSet.deserialize( JSON.parse( '{"patternBoard":"[0,1,\\"exit-vertex\\",2,[1]]","mapping":"[[[0,0]],[[0,[1,0]],[0,[-0.4999999999999998,0.8660254037844387]],[0,[-0.5000000000000004,-0.8660254037844384]]],[[[-0.4999999999999998,0.8660254037844387],[0,0],[1,0]]],[[[-0.4999999999999998,0.8660254037844387],[0,0],[1,0]],[[1,0],[0,0],[0.5,-0.4330127018922193]],[[-0.4999999999999998,0.8660254037844387],[0,0],[-0.6249999999999999,0.2165063509461098]]]]","rules":[{"input":{"redEdges":[2]},"output":{"redEdges":[2],"sectorsNotOne":[0]}}]}' ) ),
  PatternBoardRuleSet.deserialize( JSON.parse( '{"patternBoard":"[0,1,\\"exit-vertex\\",3,[2]]","mapping":"[[[0,0]],[[0,[1,0]],[0,[-0.4999999999999998,0.8660254037844387]],[0,[-0.5000000000000004,-0.8660254037844384]],[0,[1,-2.4492935982947064e-16]]],[[[-0.4999999999999998,0.8660254037844387],[0,0],[1,0]],[[-0.5000000000000004,-0.8660254037844384],[0,0],[-0.4999999999999998,0.8660254037844387]]],[[[-0.4999999999999998,0.8660254037844387],[0,0],[1,0]],[[-0.5000000000000004,-0.8660254037844384],[0,0],[-0.4999999999999998,0.8660254037844387]],[[1,0],[0,0],[0.5,-0.3213938048432696]],[[-0.5000000000000004,-0.8660254037844384],[0,0],[0.02833519961320935,-0.5937096043138541]]]]","rules":[{"input":{"blackEdges":[0]},"output":{"blackEdges":[0],"sectorsNotTwo":[1]}},{"input":{"sectorsNotOne":[0]},"output":{"sectorsNotOne":[0],"sectorsNotTwo":[1]}},{"input":{"blackEdges":[2],"sectorsOnlyOne":[0]},"output":{"blackEdges":[2],"redEdges":[3],"sectorsOnlyOne":[0]}},{"input":{"redEdges":[3],"sectorsNotZero":[0]},"output":{"redEdges":[3],"sectorsNotZero":[0,1]}},{"input":{"redEdges":[3],"sectorsNotZero":[1],"sectorsOnlyOne":[0]},"output":{"blackEdges":[2],"redEdges":[3],"sectorsOnlyOne":[0]}},{"input":{"redEdges":[3],"sectorsNotOne":[1],"sectorsNotTwo":[0]},"output":{"redEdges":[0,3],"sectorsNotOne":[1]}},{"input":{"redEdges":[3],"sectorsNotTwo":[0,1]},"output":{"redEdges":[1,3]}}]}' ) ),
  PatternBoardRuleSet.deserialize( JSON.parse( '{"patternBoard":"[0,1,\\"exit-vertex\\",4,[1,1]]","mapping":"[[[0,0]],[[0,[1,0]],[0,[6.123233995736766e-17,1]],[0,[-1,1.2246467991473532e-16]],[0,[-1.8369701987210297e-16,-1]],[0,[1,-2.4492935982947064e-16]]],[[[6.123233995736766e-17,1],[0,0],[1,0]],[[-1.8369701987210297e-16,-1],[0,0],[-1,1.2246467991473532e-16]]],[[[6.123233995736766e-17,1],[0,0],[1,0]],[[-1.8369701987210297e-16,-1],[0,0],[-1,1.2246467991473532e-16]],[[1,0],[0,0],[0.5,-0.24999999999999997]],[[6.123233995736766e-17,1],[0,0],[-0.24999999999999994,0.5]],[[-1,1.2246467991473532e-16],[0,0],[-0.49999999999999994,0.25000000000000006]],[[-1.8369701987210297e-16,-1],[0,0],[0.2499999999999999,-0.5]]]]","rules":[{"input":{"blackEdges":[0]},"output":{"blackEdges":[0],"sectorsNotTwo":[1]}},{"input":{"sectorsNotZero":[0]},"output":{"sectorsNotZero":[0],"sectorsNotTwo":[1]}},{"input":{"sectorsOnlyOne":[0,1]},"output":{"redEdges":[4],"sectorsOnlyOne":[0,1]}},{"input":{"redEdges":[4],"sectorsNotOne":[0]},"output":{"redEdges":[4],"sectorsNotOne":[0,1]}},{"input":{"redEdges":[4],"sectorsNotTwo":[1],"sectorsOnlyOne":[0]},"output":{"redEdges":[4],"sectorsOnlyOne":[0,1]}}]}' ) ),
  PatternBoardRuleSet.deserialize( JSON.parse( '{"patternBoard":"[0,1,\\"exit-vertex\\",4,[3]]","mapping":"[[[0,0]],[[0,[1,0]],[0,[6.123233995736766e-17,1]],[0,[-1,1.2246467991473532e-16]],[0,[-1.8369701987210297e-16,-1]],[0,[1,-2.4492935982947064e-16]]],[[[6.123233995736766e-17,1],[0,0],[1,0]],[[-1,1.2246467991473532e-16],[0,0],[6.123233995736766e-17,1]],[[-1.8369701987210297e-16,-1],[0,0],[-1,1.2246467991473532e-16]]],[[[6.123233995736766e-17,1],[0,0],[1,0]],[[-1,1.2246467991473532e-16],[0,0],[6.123233995736766e-17,1]],[[-1.8369701987210297e-16,-1],[0,0],[-1,1.2246467991473532e-16]],[[1,0],[0,0],[0.5,-0.24999999999999997]],[[-1.8369701987210297e-16,-1],[0,0],[0.2499999999999999,-0.5]]]]","rules":[{"input":{"redEdges":[4],"sectorsNotZero":[1],"sectorsNotTwo":[0]},"output":{"redEdges":[4],"sectorsNotZero":[1,2],"sectorsNotTwo":[0]}},{"input":{"sectorsNotOne":[0,2],"sectorsOnlyOne":[1]},"output":{"redEdges":[4],"sectorsNotOne":[0,2],"sectorsOnlyOne":[1]}},{"input":{"sectorsNotOne":[2],"sectorsNotTwo":[0],"sectorsOnlyOne":[1]},"output":{"redEdges":[0],"sectorsNotOne":[2],"sectorsOnlyOne":[1]}}]}' ) ),
  PatternBoardRuleSet.deserialize( JSON.parse( '{"patternBoard":"[0,1,\\"exit-vertex\\",5,[2,1]]","mapping":"[[[0,0]],[[0,[1,0]],[0,[0.30901699437494745,0.9510565162951535]],[0,[-0.8090169943749473,0.5877852522924732]],[0,[-0.8090169943749476,-0.587785252292473]],[0,[0.30901699437494723,-0.9510565162951536]],[0,[1,-2.4492935982947064e-16]]],[[[0.30901699437494745,0.9510565162951535],[0,0],[1,0]],[[-0.8090169943749473,0.5877852522924732],[0,0],[0.30901699437494745,0.9510565162951535]],[[0.30901699437494723,-0.9510565162951536],[0,0],[-0.8090169943749476,-0.587785252292473]]],[[[0.30901699437494745,0.9510565162951535],[0,0],[1,0]],[[-0.8090169943749473,0.5877852522924732],[0,0],[0.30901699437494745,0.9510565162951535]],[[0.30901699437494723,-0.9510565162951536],[0,0],[-0.8090169943749476,-0.587785252292473]],[[1,0],[0,0],[0.5,-0.20336832153790008]],[[-0.8090169943749473,0.5877852522924732],[0,0],[-0.5240453973709251,0.12936419790456682]],[[-0.8090169943749476,-0.587785252292473],[0,0],[-0.5240453973709251,-0.12936419790456669]],[[0.30901699437494723,-0.9510565162951536],[0,0],[0.3479232645941015,-0.41268399067485706]]]]","rules":[{"input":{"redEdges":[5],"sectorsNotOne":[1,2],"sectorsNotTwo":[0]},"output":{"redEdges":[0,5],"sectorsNotOne":[1,2]}},{"input":{"redEdges":[5],"sectorsNotOne":[2],"sectorsNotTwo":[0,1]},"output":{"redEdges":[1,5],"sectorsNotOne":[2]}}]}' ) ),
  PatternBoardRuleSet.deserialize( JSON.parse( '{"patternBoard":"[0,1,\\"exit-vertex\\",6,[1,1,1]]","mapping":"[[[0,0]],[[0,[1,0]],[0,[0.5000000000000001,0.8660254037844386]],[0,[-0.4999999999999998,0.8660254037844387]],[0,[-1,1.2246467991473532e-16]],[0,[-0.5000000000000004,-0.8660254037844384]],[0,[0.5000000000000001,-0.8660254037844386]],[0,[1,-2.4492935982947064e-16]]],[[[0.5000000000000001,0.8660254037844386],[0,0],[1,0]],[[-1,1.2246467991473532e-16],[0,0],[-0.4999999999999998,0.8660254037844387]],[[0.5000000000000001,-0.8660254037844386],[0,0],[-0.5000000000000004,-0.8660254037844384]]],[[[0.5000000000000001,0.8660254037844386],[0,0],[1,0]],[[-1,1.2246467991473532e-16],[0,0],[-0.4999999999999998,0.8660254037844387]],[[0.5000000000000001,-0.8660254037844386],[0,0],[-0.5000000000000004,-0.8660254037844384]],[[1,0],[0,0],[0.5,-0.17101007166283436]],[[0.5000000000000001,0.8660254037844386],[0,0],[0.10190093363698816,0.5185177377236365]],[[-0.4999999999999998,0.8660254037844387],[0,0],[-0.10190093363698796,0.5185177377236365]],[[-1,1.2246467991473532e-16],[0,0],[-0.5,-0.1710100716628343]],[[-0.5000000000000004,-0.8660254037844384],[0,0],[-0.39809906636301207,-0.34750766606080197]],[[0.5000000000000001,-0.8660254037844386],[0,0],[0.39809906636301196,-0.3475076660608021]]]]","rules":[{"input":{"redEdges":[6],"sectorsNotOne":[0,1]},"output":{"redEdges":[6],"sectorsNotOne":[0,1,2]}}]}' ) ),
  PatternBoardRuleSet.deserialize( JSON.parse( '{"patternBoard":"[1,0,\\"non-exit-vertex\\",2]","mapping":"[[[0,0]],[[0,[1,0]],[0,[-0.4999999999999998,0.8660254037844387]]],[[[-0.4999999999999998,0.8660254037844387],[0,0],[1,0]],[[1,0],[0,0],[-0.4999999999999998,0.8660254037844387]]],[[[-0.4999999999999998,0.8660254037844387],[0,0],[1,0]],[[1,0],[-0.5000000000000002,-0.8660254037844387],[-0.4999999999999998,0.8660254037844387]]]]","rules":[{"input":{},"output":{"sectorsNotOne":[0,1]}}]}' ) ),
  PatternBoardRuleSet.deserialize( JSON.parse( '{"patternBoard":"[1,0,\\"non-exit-vertex\\",3]","mapping":"[[[0,0]],[[0,[1,0]],[0,[-0.4999999999999998,0.8660254037844387]],[0,[-0.5000000000000004,-0.8660254037844384]]],[[[-0.4999999999999998,0.8660254037844387],[0,0],[1,0]],[[-0.5000000000000004,-0.8660254037844384],[0,0],[-0.4999999999999998,0.8660254037844387]],[[1,0],[0,0],[-0.5000000000000004,-0.8660254037844384]]],[[[-0.4999999999999998,0.8660254037844387],[0,0],[1,0]],[[-0.5000000000000004,-0.8660254037844384],[0,0],[-0.4999999999999998,0.8660254037844387]],[[1,0],[0,0],[-0.5000000000000004,-0.8660254037844384]]]]","rules":[{"input":{"blackEdges":[0]},"output":{"blackEdges":[0],"sectorsOnlyOne":[1]}}]}' ) ),
];